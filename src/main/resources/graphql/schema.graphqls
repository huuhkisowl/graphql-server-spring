
type Movie {
	id: String
	name: String!
	year: Int
	genres: [Genres]
	ageLimit: Int
	rating: Int
	actors: [Actors]
	director: Director
	synopsis: String!
}

type Actors {
  	id: String
  	firstName: String
  	lastName: String 
}

type Director {
	id: String
  	firstName: String
  	lastName: String 
}

type Genres {
  	id: String
  	genre: String
}

type Query {
	movies: [Movie]!
	movie(term: String!): [Movie]!
	moviesByGenreId(id: String!): [Movie]!
	moviesByActorId(id: String!): [Movie]!
	moviesByDirectorId(id: String!): [Movie]!
	actors: [Actors]!
	actor(term: String!): [Actors]!
	directors: [Director]!
	director(term: String!): [Director]!
	genres: [Genres]!
}

type Mutation {
	createMovie(movie: movieInput!): Movie!
	createGenre(genre: genreInput!): Genres!
	createActor(actor: actorInput!): Actors!
	createDirector(director: directorInput!): Director!
}

input movieInput {
	name: String!
	year: Int
	ageLimit: Int
	rating: Int
	synopsis: String!
	genresIds: [String]
	actorsIds: [String]
	directorId: String
}

input genreInput {
	genre: String!
}

input actorInput {
	firstName: String
  	lastName: String!
}

input directorInput {
	firstName: String
  	lastName: String!
}